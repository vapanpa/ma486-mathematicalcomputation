{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-80145c25-9409-403c-bd70-eee6a816f391.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"nbgrader":{"cocalc_minimal_stubs":false}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0a3e02","input":"#reloads the classes from monty.py as you change them.\n%load_ext autoreload\n%autoreload 2\n\nfrom monty import *","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"0a3e02","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"0d5cf6","input":"# Get the contestant's decision to 'switch' or 'stay' by prompting the user to input 'switch' or 'stay'.\n# Ensure user enters valid input.\n\ngame1.get_strategy()","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"0d5cf6","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"890bb1","input":"# open all the doors and display them.\ngame1.reveal_all()\ngame1.display()\n\n# print whether or not the contestant won\ngame1.result()","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"890bb1","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"97b2c7","input":"# initialize a new Monty Hall game and display three closed doors.\ngame1 = MontyHall()\ngame1.display()","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"97b2c7","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9ffe19","input":"# Get the contestant's initial choice of doors by prompting the user to input 1, 2, or 3.\n# Ensure user enters valid input.\n\ngame1.get_choice()","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"9ffe19","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b57466","input":"# call the simulate method.\n# Note: there should be no 'self' in the simulate method\n\nMontyHall.simulate(n = 10000)","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"b57466","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c8e82b","input":"#host reveals a different door with a goat behind it; should display two closed doors and a goat\n\ngame1.reveal_goat()\ngame1.display()","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"c8e82b","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":4,"type":"cell"}
{"cell_type":"markdown","id":"2c0e91","input":"## Homework 5\n\nThis is an individual assignment.  You must document assistance in accordance with _Documentation of Academic Work_ .  Submit a cover sheet and documentation by saving your documentation to a pdf and placing it inside the folder for this homework.\n\n### Exercise 1\n\nIn this homework, you'll implement the Monty Hall gameshow.  In the game, there is a contestant, a host, and three doors.  One door has a prize hidden behind it -- the others have goats.    The game begins with the contestant initially choosing one door, which stays closed.  The host, who knows which door has the prize, opens one of the other doors, revealing a goat.  The contestant has the option to *switch* their choice to the remaining unopened door or *stay* with their original choice.  If the contestant chooses the door with the prize, they win!\n\nWrite `Door`, `Contestant`, and `MontyHall` classes in a file named `monty.py` to make the code below run.  **Do not write any additional code below.**  A `Door` must have attributes for whether the door is open, whether it contains the prize, and the file name of an appropriate image (door, money, goat) to display .  A `Contestant` must have attributes for their name, door choice, and strategy ('switch' or 'stay').  The `MontyHall` class should control the overall game. You may include additional attributes and methods.\n\nThe images folder contains jpg images of a goat, money, and a door.  You're welcome to substitute images of your choice!","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"2c0e91","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":0,"type":"cell"}
{"cell_type":"markdown","id":"8b4bb7","input":"### Exercise 2\n\nAdd a `simulate` method to `MontyHall` that simulates $n$ games where the contestant switches doors in half the games and stays in half the games.  Report the percent of games won by strategy (switching or staying) in a table.  Briefly explain (2-3 sentences) why the strategies have different probabilities of success and are not 0.50.","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"8b4bb7","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":7,"type":"cell"}
{"id":0,"time":1698692514206,"type":"user"}
{"last_load":1698692517295,"type":"file"}
